<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAD2BAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAASwSURBVHja7d1RjhwpDADQvhlH42gcjV0pihTlY9I9U4CNnzlAuvADu8KIer32RHv1
        13hN460x/p+t9rokmsT/AEJyBl0SHxhd8o1u21cOmrVvH0gQ1v7afcDWrxTETb/07BlBCUjMvqH26wWk
        HwHVXyeg+usEbP/KgO1fGbD+7QHWvz3AwY8DIv2/d4HA639k/fuWbTM6Mu0B/cPkNxlecKbacxSAIbPL
        3q0SAJD+lQQSvAKKlcvrUGntWV5V0jaEwee3W/9B9oDgANT/1X1AcAAKwKUzDAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAgABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAAACBH
        on6PBkA1AH3pnX0DgHyb9LO3ojUA4kbbcjFeAyBqjE13IzYAYsa+G3y/vkIegKDPv6shBCDs8+8hAEDg
        5+8b/k0AQj//+oYQgNDPv54AAMEBPP3BrAZANgBrG0IAUgBYRwCAJABWEQAgDYA1DSEAiQCsIABAKgDP
        EwAgGYCDH3sEIAqACwgAMGsTAGD+eHQAagNI/V1VAGZtAgDMxwg0ACoDSNoQAjBrEwBg1iYAwHx8DABq
        A0hFAIBZmwAAc9loANQGkIIAALM2AQDm4tEB+Pdv6BsScW4MAE6uQATCAmhv3p5zB4EGwN8xi40GwJ8x
        ygEISeAUgF4w/SEJnAIwy44BwHv35iFwMYBeGkAoAgAU7wYAKE4AgOIEADg7OgBTQwgAAgAUJ9AA0BAC
        gAAACACgIQQAAQAQAEA3AAACACAAgKMiADSEACAAgKMiADSEAAAAgBIAgCYQAOkHwH8EAaDxA0D6AZB+
        ADR+AEg/ANIPgMoPgPQDIP0AOO4BQOMHgPQDUPm4BwCNHwDSD4D0A6DxiwKgSX9tAK6LLw+gq/y1Afhk
        THkAPhpVHoDPxhUHUKcX8OHIf/wGn44tDSDD8yc+7gHgJACfjy8NoN0zAQBcmX4AesXGD4DVAMZ9EwDA
        lekHoNes/ACsAtBunQAArkw/AP3+4x4AdgAYt08AAFemH4B+/3EPAGsBtBoTAMCV6Qeg104/AD1I49dO
        zTAAMdI/AcgE4Pn0A5AIwLOVf5ydYQBipB+AJABWpR+ABACePe5pMWYYgJONHwBpAKxOPwChAey4IAeA
        sM+/rvED4Hi0IOkH4FiMben/+j4EAMIVgbF1rwEg2B6wN/0ABOsDdqcfgFC7wK7GD4Bg3cCv0SrNMADF
        ZxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAgABAACAAEAAIAAYAAQAAgABAACAAE
        AAIAAYAAQAAgABAAAHADgCGT34xxB4Apk9+MeQsAReDK+W1v/0B7wMr1f/AjlCW+kR28/h9dXhOBAOk/
        CKB/SKDJ7Ful9bP09ywAfiHQEH49o+PjOT06o9M4PpK8qhhrRj9dr6Tg7DjeVw1JODgCvFvZA0qvf3tA
        8fXvXaBs/68M2P6VAds/AtKvE6hc/XUC5av/T86xjO9s/sHPVBEoV/sdEBU5+FEKbP32AWsfAslXDmz7
        nzPoIHz0l5ObUv8f1MOhpLMYuysAAAAASUVORK5CYII=
</value>
  </data>
</root>